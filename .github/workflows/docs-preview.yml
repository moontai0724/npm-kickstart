name: Documentation Preview

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  build-preview:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "20.x"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate documentation
        run: pnpm run docs

      - name: Upload documentation artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-preview-pr-${{ github.event.pull_request.number }}
          path: ./docs
          retention-days: 30

      - name: Comment PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const runId = context.runId;
            const repo = context.repo;
            
            const comment = `## ðŸ“š Documentation Preview
            
            Documentation has been generated for this PR!
            
            You can download the documentation artifact from the [workflow run](https://github.com/${repo.owner}/${repo.repo}/actions/runs/${runId}).
            
            ### How to view:
            1. Click the link above to go to the workflow run
            2. Scroll down to the "Artifacts" section
            3. Download the \`docs-preview-pr-${prNumber}\` artifact
            4. Extract the ZIP file and open \`index.html\` in your browser
            
            ---
            *This preview will be available for 30 days.*`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: prNumber,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸ“š Documentation Preview')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: repo.owner,
                repo: repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
